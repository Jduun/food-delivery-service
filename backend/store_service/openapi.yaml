openapi: 3.0.0
info:
  title: Store Service API
  version: "1.0.0"
servers:
  - url: http://localhost/api/store

tags:
  - name: Products
  - name: Orders

paths:
  /products:
    get:
      tags:
        - Products
      summary: Get products with filters and its total number
      description: Return a list of products and its count applying filters and pagination.
      parameters:
        - in: query
          name: search_input
          schema:
            type: string
          description: User input to search products by name, description, or category.
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Pagination offset.
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Maximum number of products to return.
        - in: query
          name: category
          schema:
            type: string
          description: Filter products by category.
        - in: query
          name: min_price
          schema:
            type: number
            format: float
          description: Minimum product price.
        - in: query
          name: max_price
          schema:
            type: number
            format: float
          description: Maximum product price.
      responses:
        "200":
          description: A list of products.
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductResponse"
                  count:
                    type: number
                    description: Total number of products matching the filters.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /products/{id}:
    get:
      tags:
        - Products
      summary: Get product by ID
      description: Retrieve a specific product by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to retrieve.
      responses:
        "200":
          description: The requested product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "404":
          description: Product not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /products/categories:
    get:
      tags:
        - Products
      summary: Get all product categories
      description: Retrieve a list of unique product categories.
      responses:
        "200":
          description: A list of product categories.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /orders:
    get:
      tags:
        - Orders
      summary: Get all orders for a user
      description: Retrieve a list of orders for the authenticated user.
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip for pagination.
        - in: query
          name: limit
          schema:
            type: integer
          description: The maximum number of items to return.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of orders.
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrderResponse"
                  count:
                    type: integer
                    description: Total number of orders.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Orders
      summary: Create a new order
      description: Create a new order for the authenticated user.
      parameters:
        - in: query
          name: address
          schema:
            type: string
          description: The shipping address for the order.
          required: true
      security:
        - bearerAuth: []
      responses:
        "200":
          description: The newly created order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get order by ID
      description: Retrieve a specific order by its ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the order to retrieve.
      responses:
        "200":
          description: The requested order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: Order doesn't belong to that user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Order not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Orders
      summary: Delete order by ID
      description: Delete a specific order by its ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the order to delete.
      responses:
        "200":
          description: The deleted order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: Order doesn't belong to that user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /orders/{id}/confirm:
    post:
      tags:
        - Orders
      summary: Confirm order by ID
      description: Confirm a specific order by its ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the order to confirm.
      responses:
        "200":
          description: The confirmed order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: Order doesn't belong to that user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /orders/{orderId}/products:
    get:
      tags:
        - Orders
      summary: Get products for an order
      description: Retrieve a list of products for a specific order.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          description: The ID of the order to retrieve products for.
      responses:
        "200":
          description: A list of products in the order.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderProductResponse"
        "400":
          description: Order doesn't belong to that user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /orders/{orderId}/products/{productId}:
    post:
      tags:
        - Orders
      summary: Add a product to the cart
      description: Add a product to the cart (order).
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          description: The ID of the order (cart).
        - in: path
          name: productId
          required: true
          schema:
            type: string
          description: The ID of the product to add.
      responses:
        "200":
          description: The updated order product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderProductResponse"
        "400":
          description: Order doesn't belong to that user or Order status is not cart.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Product or Order not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Orders
      summary: Remove a product from the cart
      description: Remove a product from the cart (order).
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          description: The ID of the order (cart).
        - in: path
          name: productId
          required: true
          schema:
            type: string
          description: The ID of the product to remove.
      responses:
        "200":
          description: The updated order product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderProductResponse"
        "400":
          description: Order doesn't belong to that user or Order status is not cart.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Product or Order not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    ProductResponse:
        type: object
        properties:
          id:
            type: string
            format: uuid
            example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          name:
            type: string
            example: "Apple"
          count:
            type: integer
            example: 100
          category:
            type: string
            example: "Fruits"
          price:
            type: number
            format: float
            example: 1.99
          image:
            type: string
            nullable: true
            example: "https://example.com/product.jpg"
          description:
            type: string
            nullable: true
            example: "Fresh and juicy apples"
          created_at:
            type: string
            format: date-time
            example: "2023-01-01T12:00:00Z"
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message.
    OrderResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the order.
        userId:
          type: string
          format: uuid
          description: The ID of the user who placed the order.
        totalPrice:
          type: number
          format: float
          description: The total price of the order.
        address:
          type: string
          description: The shipping address for the order.
        status:
          type: string
          description: The status of the order (e.g., "cart", "confirmed").
        createdAt:
          type: string
          format: date-time
          description: The date and time when the order was created.
        updatedAt:
          type: string
          format: date-time
          description: The date and time when the order was last updated.
    OrderProductResponse:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
          description: The ID of the order.
        productId:
          type: string
          format: uuid
          description: The ID of the product.
        count:
          type: integer
          description: The quantity of the product in the order.
        price:
          type: number
          format: float
          description: The price of the product in the order.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
