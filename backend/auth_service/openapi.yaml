openapi: 3.0.0
info:
  title: Auth API
  version: 1.0.0
tags:
  - name: Auth

paths:
  /users/me:
    get:
      tags:
        - Auth
      summary: Get the current authenticated user
      description: Returns the user details for the provided JWT in the Authorization header.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful retrieval of the current user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Invalid token

  /login:
    post:
      tags:
        - Auth
      summary: Login a user
      description: Authenticates a user and returns an access token and sets a refresh token in a cookie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserDTO"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Access token
        "401":
          description: Incorrect username or password

  /register:
    post:
      tags:
        - Auth
      summary: Register a new user
      description: Creates a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDTO"
      responses:
        "200":
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "409":
          description: User with the same name already exists

  /refresh:
    post:
      tags:
        - Auth
      summary: Refresh access token
      description: Generates a new access token using the refresh token stored in cookies.
      responses:
        "200":
          description: New access token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: New access token
        "401":
          description: Invalid or missing refresh token

  /logout:
    post:
      tags:
        - Auth
      summary: Logout a user
      description: Logs out the user by blacklisting the refresh token and clearing the cookie.
      responses:
        "200":
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully

components:
  schemas:
    LoginUserDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    CreateUserDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    UserResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string

securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT