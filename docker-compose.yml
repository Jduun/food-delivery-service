services:
  auth_service:
    build:
      context: ./backend/auth_service
    container_name: auth_service
    restart: unless-stopped
    volumes:
      - ./backend/auth_service/src:/app/src
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    env_file:
      - .env
    depends_on:
      - auth_service_db
    networks:
      - app-network

  auth_service_db:
    image: postgres:17
    container_name: auth-service-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${AUTH_DB_USERNAME}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_NAME}
    volumes:
      - ${AUTH_DB_PATH}:/var/lib/postgresql/data
    ports:
      - "${AUTH_DB_PORT}:${AUTH_DB_PORT}"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: delivery_food_frontend
    restart: unless-stopped
    networks:
      - app-network

  # nginx to proxy requests
  nginx:
    image: nginx:stable-alpine
    container_name: delivery_food_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      - auth_service
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge